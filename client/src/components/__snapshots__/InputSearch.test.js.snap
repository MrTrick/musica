// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Inserts "value" into the component, clear icon appears 1`] = `
<WithStyles(InputSearch)
  handleChange={[Function]}
  value=""
>
  <InputSearch
    classes={
      Object {
        "clear": "InputSearch-clear-34",
        "icon": "InputSearch-icon-33",
        "inputInput": "InputSearch-inputInput-36",
        "inputRoot": "InputSearch-inputRoot-35",
        "root": "InputSearch-root-32",
      }
    }
    handleChange={[Function]}
    value=""
  >
    <div
      className="InputSearch-root-32"
    >
      <div
        className="InputSearch-icon-33"
      >
        <pure(SearchIcon)>
          <SearchIcon>
            <WithStyles(SvgIcon)>
              <SvgIcon
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction-40",
                    "colorDisabled": "MuiSvgIcon-colorDisabled-42",
                    "colorError": "MuiSvgIcon-colorError-41",
                    "colorPrimary": "MuiSvgIcon-colorPrimary-38",
                    "colorSecondary": "MuiSvgIcon-colorSecondary-39",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-43",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-45",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-44",
                    "root": "MuiSvgIcon-root-37",
                  }
                }
                color="inherit"
                component="svg"
                fontSize="default"
                viewBox="0 0 24 24"
              >
                <svg
                  aria-hidden="true"
                  className="MuiSvgIcon-root-37"
                  focusable="false"
                  role="presentation"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                  />
                  <path
                    d="M0 0h24v24H0z"
                    fill="none"
                  />
                </svg>
              </SvgIcon>
            </WithStyles(SvgIcon)>
          </SearchIcon>
        </pure(SearchIcon)>
      </div>
      <WithStyles(WithFormControlContext(InputBase))
        classes={
          Object {
            "input": "InputSearch-inputInput-36",
            "root": "InputSearch-inputRoot-35",
          }
        }
        onChange={[Function]}
        placeholder="Search…"
        value=""
      >
        <WithFormControlContext(InputBase)
          classes={
            Object {
              "adornedEnd": "MuiInputBase-adornedEnd-51",
              "adornedStart": "MuiInputBase-adornedStart-50",
              "disabled": "MuiInputBase-disabled-49",
              "error": "MuiInputBase-error-52",
              "focused": "MuiInputBase-focused-48",
              "formControl": "MuiInputBase-formControl-47",
              "fullWidth": "MuiInputBase-fullWidth-55",
              "input": "MuiInputBase-input-56 InputSearch-inputInput-36",
              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-62",
              "inputAdornedStart": "MuiInputBase-inputAdornedStart-61",
              "inputMarginDense": "MuiInputBase-inputMarginDense-57",
              "inputMultiline": "MuiInputBase-inputMultiline-58",
              "inputType": "MuiInputBase-inputType-59",
              "inputTypeSearch": "MuiInputBase-inputTypeSearch-60",
              "marginDense": "MuiInputBase-marginDense-53",
              "multiline": "MuiInputBase-multiline-54",
              "root": "MuiInputBase-root-46 InputSearch-inputRoot-35",
            }
          }
          onChange={[Function]}
          placeholder="Search…"
          value=""
        >
          <InputBase
            classes={
              Object {
                "adornedEnd": "MuiInputBase-adornedEnd-51",
                "adornedStart": "MuiInputBase-adornedStart-50",
                "disabled": "MuiInputBase-disabled-49",
                "error": "MuiInputBase-error-52",
                "focused": "MuiInputBase-focused-48",
                "formControl": "MuiInputBase-formControl-47",
                "fullWidth": "MuiInputBase-fullWidth-55",
                "input": "MuiInputBase-input-56 InputSearch-inputInput-36",
                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-62",
                "inputAdornedStart": "MuiInputBase-inputAdornedStart-61",
                "inputMarginDense": "MuiInputBase-inputMarginDense-57",
                "inputMultiline": "MuiInputBase-inputMultiline-58",
                "inputType": "MuiInputBase-inputType-59",
                "inputTypeSearch": "MuiInputBase-inputTypeSearch-60",
                "marginDense": "MuiInputBase-marginDense-53",
                "multiline": "MuiInputBase-multiline-54",
                "root": "MuiInputBase-root-46 InputSearch-inputRoot-35",
              }
            }
            fullWidth={false}
            inputComponent="input"
            multiline={false}
            onChange={[Function]}
            placeholder="Search…"
            type="text"
            value=""
          >
            <div
              className="MuiInputBase-root-46 InputSearch-inputRoot-35"
              onClick={[Function]}
            >
              <input
                className="MuiInputBase-input-56 InputSearch-inputInput-36"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Search…"
                type="text"
                value=""
              />
            </div>
          </InputBase>
        </WithFormControlContext(InputBase)>
      </WithStyles(WithFormControlContext(InputBase))>
    </div>
  </InputSearch>
</WithStyles(InputSearch)>
`;

exports[`Inserts "value" into the component, clear icon appears 2`] = `
<WithStyles(InputSearch)
  handleChange={[Function]}
  value="Rap"
>
  <InputSearch
    classes={
      Object {
        "clear": "InputSearch-clear-34",
        "icon": "InputSearch-icon-33",
        "inputInput": "InputSearch-inputInput-36",
        "inputRoot": "InputSearch-inputRoot-35",
        "root": "InputSearch-root-32",
      }
    }
    handleChange={[Function]}
    value="Rap"
  >
    <div
      className="InputSearch-root-32"
    >
      <div
        className="InputSearch-icon-33"
      >
        <pure(SearchIcon)>
          <SearchIcon>
            <WithStyles(SvgIcon)>
              <SvgIcon
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction-40",
                    "colorDisabled": "MuiSvgIcon-colorDisabled-42",
                    "colorError": "MuiSvgIcon-colorError-41",
                    "colorPrimary": "MuiSvgIcon-colorPrimary-38",
                    "colorSecondary": "MuiSvgIcon-colorSecondary-39",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-43",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-45",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-44",
                    "root": "MuiSvgIcon-root-37",
                  }
                }
                color="inherit"
                component="svg"
                fontSize="default"
                viewBox="0 0 24 24"
              >
                <svg
                  aria-hidden="true"
                  className="MuiSvgIcon-root-37"
                  focusable="false"
                  role="presentation"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                  />
                  <path
                    d="M0 0h24v24H0z"
                    fill="none"
                  />
                </svg>
              </SvgIcon>
            </WithStyles(SvgIcon)>
          </SearchIcon>
        </pure(SearchIcon)>
      </div>
      <WithStyles(IconButton)
        className="InputSearch-clear-34"
        onClick={[Function]}
      >
        <IconButton
          className="InputSearch-clear-34"
          classes={
            Object {
              "colorInherit": "MuiIconButton-colorInherit-64",
              "colorPrimary": "MuiIconButton-colorPrimary-65",
              "colorSecondary": "MuiIconButton-colorSecondary-66",
              "disabled": "MuiIconButton-disabled-67",
              "label": "MuiIconButton-label-68",
              "root": "MuiIconButton-root-63",
            }
          }
          color="default"
          disabled={false}
          onClick={[Function]}
        >
          <WithStyles(ButtonBase)
            centerRipple={true}
            className="MuiIconButton-root-63 InputSearch-clear-34"
            disabled={false}
            focusRipple={true}
            onClick={[Function]}
          >
            <ButtonBase
              centerRipple={true}
              className="MuiIconButton-root-63 InputSearch-clear-34"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-70",
                  "focusVisible": "MuiButtonBase-focusVisible-71",
                  "root": "MuiButtonBase-root-69",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-69 MuiIconButton-root-63 InputSearch-clear-34"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiIconButton-label-68"
                >
                  <pure(ClearIcon)>
                    <ClearIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-40",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-42",
                              "colorError": "MuiSvgIcon-colorError-41",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-38",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-39",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-43",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-45",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-44",
                              "root": "MuiSvgIcon-root-37",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-37"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                            <path
                              d="M0 0h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </ClearIcon>
                  </pure(ClearIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                />
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </IconButton>
      </WithStyles(IconButton)>
      <WithStyles(WithFormControlContext(InputBase))
        classes={
          Object {
            "input": "InputSearch-inputInput-36",
            "root": "InputSearch-inputRoot-35",
          }
        }
        onChange={[Function]}
        placeholder="Search…"
        value="Rap"
      >
        <WithFormControlContext(InputBase)
          classes={
            Object {
              "adornedEnd": "MuiInputBase-adornedEnd-51",
              "adornedStart": "MuiInputBase-adornedStart-50",
              "disabled": "MuiInputBase-disabled-49",
              "error": "MuiInputBase-error-52",
              "focused": "MuiInputBase-focused-48",
              "formControl": "MuiInputBase-formControl-47",
              "fullWidth": "MuiInputBase-fullWidth-55",
              "input": "MuiInputBase-input-56 InputSearch-inputInput-36",
              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-62",
              "inputAdornedStart": "MuiInputBase-inputAdornedStart-61",
              "inputMarginDense": "MuiInputBase-inputMarginDense-57",
              "inputMultiline": "MuiInputBase-inputMultiline-58",
              "inputType": "MuiInputBase-inputType-59",
              "inputTypeSearch": "MuiInputBase-inputTypeSearch-60",
              "marginDense": "MuiInputBase-marginDense-53",
              "multiline": "MuiInputBase-multiline-54",
              "root": "MuiInputBase-root-46 InputSearch-inputRoot-35",
            }
          }
          onChange={[Function]}
          placeholder="Search…"
          value="Rap"
        >
          <InputBase
            classes={
              Object {
                "adornedEnd": "MuiInputBase-adornedEnd-51",
                "adornedStart": "MuiInputBase-adornedStart-50",
                "disabled": "MuiInputBase-disabled-49",
                "error": "MuiInputBase-error-52",
                "focused": "MuiInputBase-focused-48",
                "formControl": "MuiInputBase-formControl-47",
                "fullWidth": "MuiInputBase-fullWidth-55",
                "input": "MuiInputBase-input-56 InputSearch-inputInput-36",
                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-62",
                "inputAdornedStart": "MuiInputBase-inputAdornedStart-61",
                "inputMarginDense": "MuiInputBase-inputMarginDense-57",
                "inputMultiline": "MuiInputBase-inputMultiline-58",
                "inputType": "MuiInputBase-inputType-59",
                "inputTypeSearch": "MuiInputBase-inputTypeSearch-60",
                "marginDense": "MuiInputBase-marginDense-53",
                "multiline": "MuiInputBase-multiline-54",
                "root": "MuiInputBase-root-46 InputSearch-inputRoot-35",
              }
            }
            fullWidth={false}
            inputComponent="input"
            multiline={false}
            onChange={[Function]}
            placeholder="Search…"
            type="text"
            value="Rap"
          >
            <div
              className="MuiInputBase-root-46 InputSearch-inputRoot-35"
              onClick={[Function]}
            >
              <input
                className="MuiInputBase-input-56 InputSearch-inputInput-36"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Search…"
                type="text"
                value="Rap"
              />
            </div>
          </InputBase>
        </WithFormControlContext(InputBase)>
      </WithStyles(WithFormControlContext(InputBase))>
    </div>
  </InputSearch>
</WithStyles(InputSearch)>
`;
